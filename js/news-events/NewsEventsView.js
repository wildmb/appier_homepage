// Generated by CoffeeScript 1.6.1
(function() {
  var EventCollection, NewsCollection, NewsEventsView;

  NewsCollection = Backbone.Collection.extend({
    url: 'http://api.tumblr.com/v2/blog/blog.appier.com/posts/text/',
    API_KEY: '4hYIViehR1Ct3dVS1TQU4a4O0k5YJj4wflgERcVCHwK8DCGxGQ',
    fetch: function(options) {
      var data, _ref;
      if (options == null) {
        options = {};
      }
      data = ((_ref = options.data) != null ? _ref : options.data = {});
      data.api_key = NewsCollection.prototype.API_KEY;
      data.limit = 2;
      data.filter = 'text';
      options.dataType = 'jsonp';
      return Backbone.Collection.prototype.fetch.call(this, options);
    },
    parse: function(response) {
      var data, _ref, _ref1, _ref2;
      if (((_ref = response.meta) != null ? _ref.status : void 0) !== 200) {
        return [];
      }
      data = (_ref1 = response.response) != null ? _ref1 : [];
      return (_ref2 = data.posts) != null ? _ref2 : [];
    }
  });

  EventCollection = Backbone.Collection.extend({
    url: "/js/event.json",
    parse: function(response) {
      var now;
      now = (new Date()).getTime() / 1000;
      return _.filter(response, function(res) {
        return (res.beginAt <= now && now <= res.endAt);
      });
    }
  });

  NewsEventsView = Backbone.View.extend({
    el: "#layout-news-events",
    TEMPLATE: "<a href=\"mailto:hello@appier.com\">\n    <img src=\"image/index/Q.png\" class=\"doc-body-email\" alt=\"hello@appier.com\">\n</a>\n<a href=\"event.html\">\n    <img src=\"image/index/2013.png\" class=\"doc-body-gdc\" alt=\"2013 GDC Booth #208\">\n</a>\n<div class=\"doc-body-news-events\">\n    <a class=\"fb-link\" target=\"_blank\" href=\"https://www.facebook.com/AppierNetwork\"></a>\n    <a class=\"tw-link\" target=\"_blank\" href=\"https://twitter.com/GoAppier\"></a>\n\n    <% if (news.length > 0) { %>\n        <div class=\"doc-body-news-group\">\n            <div class=\"doc-body-news-tag\"></div>\n            <%= news.join('<hr>') %>\n        </div>\n    <% } %>\n\n    <% if (events.length > 0) { %>\n        <div class=\"doc-body-events-group\">\n            <div class=\"doc-body-events-tag\"></div>\n            <%= events.join('<hr>') %>\n        </div>\n    <% } %>\n</div>",
    renderNews: function(newsModel) {
      var MONTH, title, _ref, _ref1;
      MONTH = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];
      if (!newsModel instanceof Backbone.Model) {
        return '';
      }
      title = (_ref = newsModel.get('title')) != null ? _ref : '';
      title = title.slice(0, 96).concat('...');
      return "<div class=\"doc-body-news\">\n    <h5 class=\"doc-body-news-title\">" + title + "</h5>\n    <a class=\"doc-body-news-link\" href=\"" + ((_ref1 = newsModel.get('post_url')) != null ? _ref1 : '') + "\" target=\"_blank\">Read more &gt;</a>\n</div>";
    },
    renderEvent: function(eventModel) {
      if (!eventModel instanceof Backbone.Model) {
        return;
      }
      return "<div class=\"doc-body-event\">\n    <div class=\"doc-body-news-time\">" + (eventModel.get('date')) + "</div>\n    <h5 class=\"doc-body-news-title\">" + (eventModel.get('title')) + "</h5>\n    <a class=\"doc-body-news-link\" href=\"" + (eventModel.get('link')) + "\" target=\"_blank\">Read more &gt;</a>\n</div>";
    },
    render: function() {
      var data, eventCollection, newsCollection,
        _this = this;
      data = {
        news: [],
        events: []
      };
      newsCollection = new NewsCollection();
      eventCollection = new EventCollection();
      $.when(newsCollection.fetch(), eventCollection.fetch()).done(function() {
        newsCollection.each(function(m) {
          return data.news.push(_this.renderNews(m));
        });
        eventCollection.each(function(e) {
          return data.events.push(_this.renderEvent(e));
        });
        return _this.$el.html(_.template(NewsEventsView.prototype.TEMPLATE, data));
      });
      return this;
    }
  });

  window.newsEventsView = new NewsEventsView().render();

}).call(this);
